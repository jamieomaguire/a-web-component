{"version":3,"file":"pie-button.js","sourceRoot":"","sources":["../src/pie-button.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,KAAK,CAAC;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC;AAGtB,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,UAAU;IAAlC;;QAGH;;WAEG;QAEH,UAAK,GAAG,CAAC,CAAC;QAEV;;WAEG;QAEH,SAAI,GAAG,SAAS,CAAA;QAEhB;;WAEG;QAEH,SAAI,GAAG,OAAO,CAAA;QAEd;;WAEG;QAEH,aAAQ,GAAG,KAAK,CAAA;IAiBpB,CAAC;IAfY,MAAM;QACb,OAAO,IAAI,CAAA;;iBAEA,IAAI,CAAC,QAAQ;oBACV,IAAI,CAAC,QAAQ;8BACH,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,IAAI;;uBAExC,IAAI,CAAC,KAAK;gBACjB,CAAA;IACZ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC;IACvD,CAAC;;AAxCe,gBAAM,GAAG,GAAG,CAAA,GAAG,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC;AAMxD;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;wCACf;AAMV;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;uCACT;AAMhB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;uCACX;AAMd;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;2CACV;AAzBP,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CA0CrB;SA1CY,SAAS","sourcesContent":["import { LitElement, css, html, unsafeCSS } from 'lit';\nimport { styles } from './generated/style';\nimport { customElement, property } from 'lit/decorators.js';\n\nconst styleString = styles();\n\n@customElement('pie-button')\nexport class PieButton extends LitElement {\n    static override styles = css`${unsafeCSS(styleString)}`;\n  \n    /**\n     * The number of times the button has been clicked.\n     */\n    @property({type: Number})\n    count = 0;\n\n    /**\n     * The type of button to show\n     */\n    @property({type: String})\n    type = \"Primary\"\n\n    /**\n     * The size of button to show\n     */\n    @property({type: String})\n    size = \"Large\"\n\n    /**\n     * Should the button be disabled\n     */\n    @property({type: Boolean})\n    disabled = false\n  \n    override render() {\n      return html`\n      <button\n        @click=${this._onClick}\n        ?disabled=${this.disabled}\n        class=\"o-btn o-btn--${this.type} o-btn--size${this.size}\">\n        <slot></slot>\n        Click Count: ${this.count}\n      </button>`\n    }\n  \n    _onClick() {\n      this.count++;\n      this.dispatchEvent(new CustomEvent('count-changed'));\n    }\n}\n\n// customElements.define('pie-button', PieButton);\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'pie-button': PieButton;\n  }\n}"]}